// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using pavlov_d_kt_41_22.DataBase;

#nullable disable

namespace pavlov_d_kt_41_22.Migrations
{
    [DbContext(typeof(PavlovDbContext))]
    [Migration("20250331130026_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.25")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("pavlov_d_kt_41_22.Models.AcademicDegree", b =>
                {
                    b.Property<int>("ADId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ad_id")
                        .HasComment("Идентификатор ученой степени");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ADId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("c_ad_name")
                        .HasComment("Название ученой степени");

                    b.HasKey("ADId")
                        .HasName("pk_Academic_degree_ad_id");

                    b.ToTable("Academic_degree", (string)null);
                });

            modelBuilder.Entity("pavlov_d_kt_41_22.Models.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("department_id")
                        .HasComment("Идентификатор кафедры");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DepartmentId"), 1L, 1);

                    b.Property<int>("HeadTeacherId")
                        .HasColumnType("int")
                        .HasColumnName("f_head_teacher_id")
                        .HasComment("Идентификатор заведующего кафедрой");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("c_department_name")
                        .HasComment("Название кафедры");

                    b.HasKey("DepartmentId")
                        .HasName("pk_Kafedra_department_id");

                    b.HasIndex("HeadTeacherId")
                        .IsUnique();

                    b.ToTable("Kafedra", (string)null);
                });

            modelBuilder.Entity("pavlov_d_kt_41_22.Models.Direction", b =>
                {
                    b.Property<int>("DirectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("direction_id")
                        .HasComment("Идентификатор направления");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DirectionId"), 1L, 1);

                    b.Property<int>("DisciplineId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("c_direction_name")
                        .HasComment("Название направления");

                    b.Property<int>("TeacherId")
                        .HasColumnType("int");

                    b.Property<int>("hours")
                        .HasColumnType("int")
                        .HasColumnName("n_hours")
                        .HasComment("Количество часов");

                    b.HasKey("DirectionId")
                        .HasName("pk_Napravlenie_direction_id");

                    b.HasIndex("DisciplineId");

                    b.HasIndex("TeacherId");

                    b.ToTable("Napravlenie", (string)null);
                });

            modelBuilder.Entity("pavlov_d_kt_41_22.Models.Discipline", b =>
                {
                    b.Property<int>("DisciplineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("discipline_id")
                        .HasComment("Идентификатор дисциплины");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DisciplineId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("c_discipline_name")
                        .HasComment("Название дисциплины");

                    b.HasKey("DisciplineId")
                        .HasName("pk_Discipline_discipline_id");

                    b.ToTable("Discipline", (string)null);
                });

            modelBuilder.Entity("pavlov_d_kt_41_22.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("position_id")
                        .HasComment("Идентификатор должности");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"), 1L, 1);

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("c_position_title")
                        .HasComment("Название должности");

                    b.HasKey("PositionId")
                        .HasName("pk_Position_position_id");

                    b.ToTable("Position", (string)null);
                });

            modelBuilder.Entity("pavlov_d_kt_41_22.Models.Teacher", b =>
                {
                    b.Property<int>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("teacher_id")
                        .HasComment("Идентификатор преподавателя");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TeacherId"), 1L, 1);

                    b.Property<int>("ADId")
                        .HasColumnType("int")
                        .HasColumnName("f_academic_degree_id")
                        .HasComment("Идентификатор ученой степени");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("f_department_id")
                        .HasComment("Идентификатор кафедры");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("c_teacher_firstname")
                        .HasComment("Имя преподавателя");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("c_teacher_lastname")
                        .HasComment("Фамилия преподавателя");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasColumnType("varchar(100)")
                        .HasColumnName("c_teacher_middlename")
                        .HasComment("Отчество преподавателя");

                    b.Property<int>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("f_position_id")
                        .HasComment("Идентификатор должности");

                    b.HasKey("TeacherId")
                        .HasName("pk_Teacher_teacher_id");

                    b.HasIndex("ADId");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("PositionId");

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("pavlov_d_kt_41_22.Models.Department", b =>
                {
                    b.HasOne("pavlov_d_kt_41_22.Models.Teacher", "HeadTeacher")
                        .WithOne()
                        .HasForeignKey("pavlov_d_kt_41_22.Models.Department", "HeadTeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_department_head_teacher");

                    b.Navigation("HeadTeacher");
                });

            modelBuilder.Entity("pavlov_d_kt_41_22.Models.Direction", b =>
                {
                    b.HasOne("pavlov_d_kt_41_22.Models.Discipline", "Discipline")
                        .WithMany()
                        .HasForeignKey("DisciplineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_direction_discipline");

                    b.HasOne("pavlov_d_kt_41_22.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_direction_teacher");

                    b.Navigation("Discipline");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("pavlov_d_kt_41_22.Models.Teacher", b =>
                {
                    b.HasOne("pavlov_d_kt_41_22.Models.AcademicDegree", "AcademicDegree")
                        .WithMany()
                        .HasForeignKey("ADId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_academic_degree");

                    b.HasOne("pavlov_d_kt_41_22.Models.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_department");

                    b.HasOne("pavlov_d_kt_41_22.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_teacher_position");

                    b.Navigation("AcademicDegree");

                    b.Navigation("Department");

                    b.Navigation("Position");
                });
#pragma warning restore 612, 618
        }
    }
}
